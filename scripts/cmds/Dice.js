const fs = require("fs");

module.exports = {
  config: {
    name: "dice",
    version: "2.0",
    hasPermission: 0,
    credits: "Arafat",
    description: "‡¶°‡¶æ‡¶á‡¶∏ ‡¶ó‡ßá‡¶Æ ‡¶è‡¶ï‡¶æ ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶ï‡¶æ‡¶â‡¶ï‡ßá ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶ï‡¶∞‡ßá ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã",
    category: "game",
    usages: "[amount] ‡¶Ö‡¶•‡¶¨‡¶æ [amount] @mention",
    cooldowns: 5
  },

  onStart: async function ({ api, event, args, usersData, Currencies }) {
    const { threadID, senderID, messageID, mentions } = event;
    const bet = parseInt(args[0]);

    if (!bet || isNaN(bet) || bet <= 0) return api.sendMessage("‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶¨‡ßá‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¶‡¶æ‡¶ì‡•§", threadID, messageID);

    const userBalance = (await Currencies.getData(senderID)).money;
    if (userBalance < bet) return api.sendMessage("‚ùå ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶è‡¶§ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á‡•§", threadID, messageID);

    // Multiplayer Mode
    if (Object.keys(mentions).length > 0) {
      const opponentID = Object.keys(mentions)[0];
      const opponentName = mentions[opponentID].replace("@", "");

      if (opponentID == senderID) return api.sendMessage("‚ùå ‡¶®‡¶ø‡¶ú‡ßá‡¶ï‡ßá ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶®‡¶æ!", threadID, messageID);

      const opponentBalance = (await Currencies.getData(opponentID)).money;
      if (opponentBalance < bet) return api.sendMessage(`‚ùå ${opponentName} ‡¶è‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶è‡¶§ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á‡•§`, threadID, messageID);

      api.sendMessage(
        `${opponentName}, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ${bet}$ ‡¶¨‡ßá‡¶ü‡ßá ‡¶°‡¶æ‡¶á‡¶∏ ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶ì ${await usersData.getName(senderID)} ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá?\n\n` +
        `‡¶∞‡¶æ‡¶ú‡¶ø ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã 'Y' ‡¶Ü‡¶∞ ‡¶®‡¶æ ‡¶ö‡¶æ‡¶á‡¶≤‡ßá 'N'`,
        threadID,
        (err, info) => {
          global.GoatBot.onReply.set(info.messageID, {
            commandName: "dice",
            messageID: info.messageID,
            author: senderID,
            opponentID,
            bet
          });
        }
      );
    }

    // Single Player Mode
    else {
      const userDice = Math.floor(Math.random() * 6) + 1;
      const botDice = Math.floor(Math.random() * 6) + 1;

      let result = `‡¶§‡ßÅ‡¶Æ‡¶ø üé≤: ${userDice}\n‡¶¨‡¶ü üé≤: ${botDice}\n\n`;
      if (userDice > botDice) {
        await Currencies.increaseMoney(senderID, bet);
        result += `‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßã ${bet}$!`;
      } else if (userDice < botDice) {
        await Currencies.decreaseMoney(senderID, bet);
        result += `‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶π‡¶æ‡¶∞‡¶õ‡ßã ${bet}$‡•§`;
      } else {
        result += "ü§ù ‡¶ü‡¶æ‡¶á ‡¶π‡ßü‡ßá‡¶õ‡ßá! ‡¶ï‡¶æ‡¶∞‡¶ì ‡¶≤‡¶æ‡¶≠ ‡¶¨‡¶æ ‡¶ï‡ßç‡¶∑‡¶§‡¶ø ‡¶π‡ßü‡¶®‡¶ø‡•§";
      }

      return api.sendMessage(result, threadID, messageID);
    }
  },

  onReply: async function ({ event, api, Currencies, usersData, Reply }) {
    const { senderID, threadID, messageID, body } = event;
    const { author, opponentID, bet } = Reply;

    if (senderID != opponentID) return;

    if (body.toLowerCase() == "y") {
      const authorBalance = (await Currencies.getData(author)).money;
      const opponentBalance = (await Currencies.getData(opponentID)).money;

      if (authorBalance < bet || opponentBalance < bet) {
        return api.sendMessage("‚ùå ‡¶¶‡ßÅ‡¶ú‡¶®‡ßá‡¶∞ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá‡¶á ‡¶Ø‡¶•‡ßá‡¶∑‡ßç‡¶ü ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á‡•§", threadID, messageID);
      }

      const authorDice = Math.floor(Math.random() * 6) + 1;
      const opponentDice = Math.floor(Math.random() * 6) + 1;

      let result = `‡¶°‡¶æ‡¶á‡¶∏ ‡¶∞‡ßã‡¶≤ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...\n\n` +
        `${await usersData.getName(author)} üé≤: ${authorDice}\n` +
        `${await usersData.getName(opponentID)} üé≤: ${opponentDice}\n\n`;

      if (authorDice > opponentDice) {
        await Currencies.decreaseMoney(opponentID, bet);
        await Currencies.increaseMoney(author, bet);
        result += `‚úÖ ${await usersData.getName(author)} ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá ${bet}$`;
      } else if (authorDice < opponentDice) {
        await Currencies.decreaseMoney(author, bet);
        await Currencies.increaseMoney(opponentID, bet);
        result += `‚úÖ ${await usersData.getName(opponentID)} ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá ${bet}$`;
      } else {
        result += "ü§ù ‡¶ü‡¶æ‡¶á ‡¶π‡ßü‡ßá‡¶õ‡ßá! ‡¶ï‡¶æ‡¶∞‡¶ì ‡¶≤‡¶æ‡¶≠ ‡¶¨‡¶æ ‡¶ï‡ßç‡¶∑‡¶§‡¶ø ‡¶π‡ßü‡¶®‡¶ø‡•§";
      }

      return api.sendMessage(result, threadID);
    }

    if (body.toLowerCase() == "n") {
      return api.sendMessage("‚ùå ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", threadID, messageID);
    }
  }
};
