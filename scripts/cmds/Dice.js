module.exports = {
  config: {
    name: "dice",
    aliases: [],
    version: "1.0",
    author: "Arafat",
    countDown: 5,
    role: 0,
    shortDescription: {
      en: "Roll a dice to win or lose money"
    },
    longDescription: {
      en: "Roll a dice and bet your money. If you win, you get double!"
    },
    category: "fun",
    guide: {
      en: "{pn} <amount>"
    }
  },

  onStart: async function ({ api, event, args, message }) {
    const { threadID, senderID, messageID } = event;
    const bet = parseInt(args[0]);

    // Load economy controller properly
    const economy = global.controllers?.economy;
    const usersData = global.controllers?.usersData;

    // Check if economy or usersData are not available
    if (!economy || !usersData) {
      return message.reply("‚ùå ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶¨‡¶æ ‡¶á‡¶ï‡ßã‡¶®‡¶Æ‡¶ø ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡¶®‡¶ø‡•§");
    }

    if (isNaN(bet) || bet <= 0)
      return message.reply("‚ö†Ô∏è ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶≤‡ßá‡¶ñ‡ßã‡•§ ‡¶Ø‡ßá‡¶Æ‡¶®: #dice 100");

    try {
      // Fetch the user's balance
      const userBalance = await economy.get(senderID);
      if (userBalance < bet)
        return message.reply("‚ùå ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶Ø‡¶•‡ßá‡¶∑‡ßç‡¶ü ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á‡•§");

      // Dice rolls
      const userRoll = Math.floor(Math.random() * 6) + 1;
      const botRoll = Math.floor(Math.random() * 6) + 1;

      let resultMsg = `üé≤ ‡¶§‡ßÅ‡¶Æ‡¶ø ${userRoll} ‡¶™‡ßá‡¶≤‡¶æ, ‡¶Ü‡¶Æ‡¶ø ‡¶™‡ßá‡¶≤‡¶æ‡¶Æ ${botRoll}!\n`;

      if (userRoll > botRoll) {
        await economy.add(senderID, bet); // Adding the bet to the user if win
        resultMsg += `‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßã! ‡¶§‡ßÅ‡¶Æ‡¶ø ${bet} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡ßá‡¶≤‡ßá‡•§`;
      } else if (userRoll < botRoll) {
        await economy.add(senderID, -bet); // Deducting the bet if user loses
        resultMsg += `‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶π‡¶æ‡¶∞‡¶≤‡ßá! ${bet} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ï‡ßá‡¶ü‡ßá ‡¶®‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶≤‡ßã‡•§`;
      } else {
        resultMsg += "‚öñÔ∏è ‡¶°‡ßç‡¶∞! ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡ßü‡¶®‡¶ø‡•§";
      }

      return message.reply(resultMsg);
    } catch (error) {
      console.error("Error occurred:", error);
      return message.reply("‚ùå ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§");
    }
  }
};
