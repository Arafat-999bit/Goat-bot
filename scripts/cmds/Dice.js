module.exports.config = {
  name: "dice",
  version: "2.0",
  hasPermission: 0,
  credits: "Arafat Da",
  description: "‡¶°‡¶æ‡¶á‡¶∏ ‡¶ó‡ßá‡¶Æ ‡¶è‡¶ï‡¶æ ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶ï‡¶æ‡¶â‡¶ï‡ßá ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶ï‡¶∞‡ßá ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã",
  commandCategory: "game",
  usages: "[‡¶¨‡ßá‡¶ü] ‡¶Ö‡¶•‡¶¨‡¶æ [‡¶¨‡ßá‡¶ü] @mention",
  cooldowns: 5
};

module.exports.run = async function ({ api, event, args, Currencies }) {
  const { threadID, messageID, senderID, mentions } = event;

  let bet = parseInt(args[0]);
  if (isNaN(bet) || bet <= 0) return api.sendMessage("‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß ‡¶¨‡ßá‡¶ü ‡¶è‡¶Æ‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¶‡¶ø‡¶®‡•§", threadID, messageID);

  const senderData = await Currencies.getData(senderID);
  if (senderData.money < bet)
    return api.sendMessage("‚ùå ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶è‡¶§ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á!", threadID, messageID);

  const mentionedID = Object.keys(mentions)[0];

  // Multiplayer Mode
  if (mentionedID) {
    if (mentionedID === senderID) return api.sendMessage("‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶®‡¶ø‡¶ú‡ßá‡¶ï‡ßá‡¶á ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶®‡¶æ!", threadID, messageID);

    const opponentData = await Currencies.getData(mentionedID);
    if (opponentData.money < bet)
      return api.sendMessage(`‚ùå ${mentions[mentionedID].replace("@", "")} ‡¶è‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶Ø‡¶•‡ßá‡¶∑‡ßç‡¶ü ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á!`, threadID, messageID);

    return api.sendMessage(
      `${mentions[mentionedID]}!\n${senderData.name} ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ${bet}$ ‡¶¨‡ßá‡¶ü‡ßá ‡¶°‡¶æ‡¶á‡¶∏ ‡¶ñ‡ßá‡¶≤‡¶æ‡¶Ø‡¶º ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶ï‡¶∞‡ßá‡¶õ‡ßá!\n\n‡¶°‡¶æ‡¶á‡¶∏ ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã: Y\n‡¶®‡¶æ ‡¶ñ‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá: N`,
      threadID,
      async (err, info) => {
        global.client.handleReply.push({
          name: this.config.name,
          messageID: info.messageID,
          author: mentionedID,
          challenger: senderID,
          bet: bet,
          type: "challenge"
        });
      }
    );
  }

  // Single Player Mode
  await Currencies.decreaseMoney(senderID, bet);

  const botDice = Math.floor(Math.random() * 6) + 1;
  const userDice = Math.floor(Math.random() * 6) + 1;

  let result = `üé≤ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßã: ${userDice}\nü§ñ ‡¶¨‡¶ü ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá: ${botDice}\n`;

  if (userDice > botDice) {
    await Currencies.increaseMoney(senderID, bet * 2);
    result += `‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßã! ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßã ${bet * 2}$`;
  } else if (userDice < botDice) {
    result += `‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶π‡ßá‡¶∞‡ßá‡¶õ‡ßã! ‡¶π‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶õ‡ßã ${bet}$`;
  } else {
    await Currencies.increaseMoney(senderID, bet);
    result += `‚öñÔ∏è ‡¶ü‡¶æ‡¶á ‡¶π‡ßü‡ßá‡¶õ‡ßá! ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá`;
  }

  return api.sendMessage(result, threadID, messageID);
};

module.exports.handleReply = async function ({ api, event, handleReply, Currencies }) {
  const { threadID, messageID, senderID, body } = event;

  if (handleReply.type === "challenge" && senderID === handleReply.author) {
    const bet = handleReply.bet;
    const challenger = handleReply.challenger;

    if (body.toLowerCase() === "y") {
      // ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶™‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá
      await Currencies.decreaseMoney(challenger, bet);
      await Currencies.decreaseMoney(senderID, bet);

      const challengerDice = Math.floor(Math.random() * 6) + 1;
      const opponentDice = Math.floor(Math.random() * 6) + 1;

      let result = `üéÆ ‡¶°‡¶æ‡¶á‡¶∏ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö ‡¶∂‡ßÅ‡¶∞‡ßÅ!\n\n`;
      result += `üë§ ${challenger} ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá: ${challengerDice}\n`;
      result += `üë§ ${senderID} ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá: ${opponentDice}\n\n`;

      if (challengerDice > opponentDice) {
        await Currencies.increaseMoney(challenger, bet * 2);
        result += `‚úÖ ${challenger} ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá ${bet * 2}$`;
      } else if (challengerDice < opponentDice) {
        await Currencies.increaseMoney(senderID, bet * 2);
        result += `‚úÖ ${senderID} ‡¶ú‡¶ø‡¶§‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßá ${bet * 2}$`;
      } else {
        await Currencies.increaseMoney(challenger, bet);
        await Currencies.increaseMoney(senderID, bet);
        result += `‚öñÔ∏è ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö ‡¶°‡ßç‡¶∞! ‡¶¶‡ßÅ‡¶á ‡¶™‡¶ï‡ßç‡¶∑‡ßá‡¶∞ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶´‡ßá‡¶∞‡¶§`;
      }

      return api.sendMessage(result, threadID);
    } else if (body.toLowerCase() === "n") {
      return api.sendMessage("‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶°‡¶æ‡¶á‡¶∏ ‡¶ñ‡ßá‡¶≤‡¶æ‡ßü ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡ßã‡¶®‡¶ø‡•§", threadID);
    } else {
      return api.sendMessage("‚ùì ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ Y ‡¶¨‡¶æ N ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã‡•§", threadID);
    }
  }
};
